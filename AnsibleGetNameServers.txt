
- hosts: all
  gather_facts: yes
  name: Get Name Servers
  tasks:

    - name: Get hostname
      shell: hostname
      register: hostname_result
      changed_when: false

    - name: Debug - Retrieved hostname
      debug:
        msg: "Hostname: {{ hostname_result.stdout | default('Unknown') }}"

    - name: Set hostname fact
      set_fact:
        system_hostname: "{{ hostname_result.stdout | default('Unknown') }}"

    - name: Get system's primary IP
      shell: ip route get 1.1.1.1 | awk '{ for(i=1;i<=NF;i++) if ($i=="src") print $(i+1) }'
      register: ip_result
      changed_when: false

    - name: Debug - Parsed IP address
      debug:
        msg: "IP Address: {{ ip_result.stdout | default('Unknown') }}"

    - name: Set primary IP fact
      set_fact:
        ip_address: "{{ ip_result.stdout | default('Unknown') }}"

    - name: Get DNS servers from resolvectl
      shell: resolvectl status | awk '/DNS Servers:/,/Protocols:/ { if ($1 ~ /[0-9]+\./) print $1 }'
      register: resolvectl_dns
      changed_when: false
      failed_when: false

    - name: Debug - Parsed name servers from resolvectl
      debug:
        msg: "resolvectl DNS: {{ resolvectl_dns.stdout_lines }}"

    - name: Get DNS servers from resolv.conf
      shell: grep '^nameserver' /etc/resolv.conf | awk '{print $2}'
      register: resolv_conf_dns
      changed_when: false
      failed_when: false

    - name: Debug - Parsed name servers from resolv.conf
      debug:
        msg: "resolv.conf DNS: {{ resolv_conf_dns.stdout_lines }}"

    - name: Combine and clean name server results
      set_fact:
        name_servers: >-
          {{ (resolvectl_dns.stdout_lines + resolv_conf_dns.stdout_lines) 
          | map('trim') 
          | map('regex_replace', '[\s\r\n]+', '') 
          | select('search', '\\d') 
          | reject('equalto', '') 
          | list }}

    - name: Debug - Merged name servers list
      debug:
        msg: "Filtered DNS Servers: {{ name_servers }}"

    - name: Format name servers with configurable delimiter
      set_fact:
        name_servers_str: >-
          {{ name_servers | join(' | ') | regex_replace('[\n\r]+', ' ') if name_servers else 'No external DNS found' }}

    - name: Debug - Formatted name servers string
      debug:
        msg: "Final Name Servers String: {{ name_servers_str }}"

    - name: Ensure CSV file is created with all hosts
      delegate_to: localhost
      run_once: true
      copy:
        content: |
          ansible_host,Hostname,IP Address,Name Servers
          {% for row in groups['all'] %}
          {% set host_entry = hostvars[row] %}
          {{ host_entry.ansible_host | default('Unknown') }},{{ host_entry.system_hostname | default('Unknown') }},{{ host_entry.ip_address | default('Unknown') }},{{ host_entry.name_servers_str | default('No data') }}
          {% endfor %}
        dest: "./external_dns_info.csv"

    - name: Debug - CSV row format
      debug:
        msg: "CSV Entry: {{ ansible_host }},{{ system_hostname }},{{ ip_address }},{{ name_servers_str }}"




