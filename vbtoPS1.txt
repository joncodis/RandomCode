  - name: Parse name servers from resolvectl (Ubuntu)
      set_fact:
        name_servers: "{{ resolvectl_output.stdout | regex_findall('DNS Servers:\\s+([0-9\\.]+(?:\\s+[0-9\\.]+)*)') | first | default('') | split(' ') | select('match', '^((?!127\\.|::1|0\\.0\\.0\\.0).)*$') | join(', ') }}"
      when: systemd_resolved_status.stdout == "active"


    - name: Parse name servers from resolvectl (Ubuntu)
      set_fact:
        name_servers: "{{ resolvectl_output.stdout | regex_findall('DNS Servers:\\s+([0-9\\.]+(?:\\s+[0-9\\.]+)*)') | first | default('') | split(' ') |
                        select('search', '^(?!127\.|::1|0\.0\.0\.0)') | list }}"
      when: systemd_resolved_status.stdout == "active"


    - name: Parse name servers from resolvectl
      set_fact:
        name_servers: >-
          {{ resolvectl_output.stdout | regex_findall('DNS Servers:\\s+([0-9\\.]+(?:\\s+[0-9\\.]+)*)') 
          | first | default('') | split(' ') 
          | reject('search', '^(127\.|::1|0\.0\.0\.0)') | list }}
      when: systemd_resolved_status.stdout == "active"            

          - name: Parse name servers from resolvectl
      set_fact:
        name_servers: >-
          {{ resolvectl_output.stdout 
          | regex_findall('DNS Servers:\\s+((?:[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\s*)+)') 
          | first | default('') | split(' ') 
          | reject('search', '^(127\.|::1|0\.0\.0\.0)') | list }}
      when: systemd_resolved_status.stdout == "active"


    - name: Parse name servers from resolvectl
      set_fact:
        name_servers: >-
          {{ resolvectl_output.stdout 
          | regex_findall('^\s*DNS Servers:\s*([\d\. ]+)', multiline=True) 
          | first | default('') | split(' ') 
          | reject('search', '^(127\.|::1|0\.0\.0\.0)') | list }}
      when: systemd_resolved_status.stdout == "active"


    - name: Parse name servers from resolvectl
      set_fact:
        name_servers: >-
          {{ resolvectl_output.stdout 
          | regex_findall('^\s*DNS Servers:\s*([\d\. ]+)', multiline=True) 
          | first | default('') | split(' ') 
          | reject('search', '^(127\.|::1|0\.0\.0\.0)') | list }}
      when: systemd_resolved_status.stdout == "active"


      
    - name: Parse name servers from resolvectl
      set_fact:
        name_servers: >-
          {{ resolvectl_output.stdout 
          | regex_findall('^\s*DNS Servers:\s*([\d\. ]+)', multiline=True) 
          | first | default('') | split(' ') 
          | reject('search', '^(127\.|::1|0\.0\.0\.0)') | list }}
      when: systemd_resolved_status.stdout == "active"

    - name: Parse name servers from resolvectl
      set_fact:
        name_servers: >-
          {{ resolvectl_output.stdout 
          | regex_findall('^\s*DNS Servers:\s*((?:\d{1,3}\.){3}\d{1,3}(?:\s+(?:\d{1,3}\.){3}\d{1,3})*)', multiline=True) 
          | first | default('') | split(' ') 
          | reject('search', '^(127\.|::1|0\.0\.0\.0)') | list }}
      when: systemd_resolved_status.stdout == "active"

    - name: Parse name servers from resolvectl
      set_fact:
        name_servers: >-
          {{ resolvectl_output.stdout 
          | regex_findall('^\s*DNS Servers:\s*((?:\d{1,3}\.){3}\d{1,3}(?:\s+(?:\d{1,3}\.){3}\d{1,3})*)', multiline=True) 
          | first | default('') | split(' ') 
          | reject('search', '^(127\.|::1|0\.0\.0\.0)') 
          | select('search', '\d') | list }}
      when: systemd_resolved_status.stdout == "active"


    - name: Parse name servers from resolvectl
      set_fact:
        name_servers: >-
          {{ resolvectl_output.stdout 
          | regex_findall('^\s*DNS Servers:\s*((?:\d{1,3}\.){3}\d{1,3}(?:\s+(?:\d{1,3}\.){3}\d{1,3})*)', multiline=True) 
          | first | default('') 
          | split(' ') 
          | select('search', '\\d')  # Filter only valid IPs
          | map('trim')  # Remove unwanted leading/trailing spaces
          | reject('equalto', '')  # Remove empty strings
          | list }}
      when: systemd_resolved_status.stdout == "active"


    - name: Parse name servers from resolvectl
      set_fact:
        name_servers: >-
          {{ resolvectl_output.stdout 
          | regex_findall('^\s*DNS Servers:\s*((?:\d{1,3}\.){3}\d{1,3}(?:\s+(?:\d{1,3}\.){3}\d{1,3})*)', multiline=True) 
          | first | default('') 
          | split(' ') 
          | select('search', '\\d')  # Filter only valid IPs
          | map('trim')  # Remove unwanted leading/trailing spaces
          | map('regex_replace', '\\n', '')  # Strip any remaining newlines
          | reject('equalto', '')  # Remove empty strings
          | list }}







