param (
    [string]$Server,
    [string]$PrincipalMatch = "*",
    [string]$ExportCsv
)

$defaultUsername = "$env:USERNAME@vsphere.local"
$username = Read-Host "Enter username [$defaultUsername]"
if ([string]::IsNullOrWhiteSpace($username)) {
    $username = $defaultUsername
}
$password = Read-Host -AsSecureString "Enter password"
$plainPassword = [Runtime.InteropServices.Marshal]::PtrToStringAuto(
    [Runtime.InteropServices.Marshal]::SecureStringToBSTR($password)
)

# Get session token
$response = Invoke-RestMethod -Method Post -Uri "https://$Server/rest/com/vmware/cis/session" `
    -Headers @{ Authorization = "Basic " + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$username`:$plainPassword")) } `
    -SkipCertificateCheck

$sessionId = $response.value
$headers = @{ "vmware-api-session-id" = $sessionId }

# Get all local users (localos or vsphere.local)
$usersResponse = Invoke-RestMethod -Method Get -Uri "https://$Server/api/appliance/local-account" `
    -Headers $headers -SkipCertificateCheck

$users = $usersResponse.value | Where-Object { $_.username -like $PrincipalMatch }

$users | Format-Table username, role, last_password_change_time, account_expiration_time, enabled

if ($ExportCsv) {
    $users | Export-Csv -Path $ExportCsv -NoTypeInformation
    Write-Host "`nExported to $ExportCsv"
}





import ssl
import requests
import urllib3
from pyVim.connect import SmartConnect, Disconnect
import atexit

# Disable self-signed cert warnings
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def get_vcenter_session_cookie(host, username, password):
    """
    Connect to vCenter via pyVmomi and return session cookie for REST API.
    """
    context = ssl._create_unverified_context()

    si = SmartConnect(host=host, user=username, pwd=password, sslContext=context)
    atexit.register(Disconnect, si)

    session_cookie = si._stub.cookie  # e.g., "vmware_soap_session=xyz; path=/; secure; HttpOnly"
    cookie_value = session_cookie.split('=')[1].split(';')[0]
    return cookie_value

def get_local_vcenter_users(vcenter_host, session_cookie):
    """
    Use the vSphere REST API to get local users, using the session from pyVmomi.
    """
    url = f"https://{vcenter_host}/api/appliance/local-account"
    headers = {
        "vmware-api-session-id": session_cookie
    }

    response = requests.get(url, headers=headers, verify=False)

    if response.status_code != 200:
        raise Exception(f"Failed to fetch users: {response.status_code} - {response.text}")

    return response.json().get("value", [])

# ðŸ”§ Usage
if __name__ == "__main__":
    VCENTER_HOST = "your-vcenter-host"
    USERNAME = "your-username@vsphere.local"
    PASSWORD = "your-password"

    print(f"Connecting to vCenter {VCENTER_HOST}...")

    session_id = get_vcenter_session_cookie(VCENTER_HOST, USERNAME, PASSWORD)
    users = get_local_vcenter_users(VCENTER_HOST, session_id)

    for user in users:
        print(f"{user['username']:<25}  Enabled: {user['enabled']}  Role: {user['role']}")
