###############################################
# Force TLS 1.2 and ignore certificate errors
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }

# --- CONFIG ---
$vcHost = "your-vcenter-host"  # e.g., vcsa.mycorp.local
$username = "administrator@vsphere.local"
$password = "YourSecurePassword!"

# --- Step 1: Get session ID ---
function Get-VCenterSession {
    param (
        [string]$vcHost,
        [string]$username,
        [string]$password
    )

    $uri = "https://$vcHost/rest/com/vmware/cis/session"
    $authBytes = [System.Text.Encoding]::UTF8.GetBytes("$username`:$password")
    $authBase64 = [Convert]::ToBase64String($authBytes)

    $request = [System.Net.WebRequest]::Create($uri)
    $request.Method = "POST"
    $request.Headers.Add("Authorization", "Basic $authBase64")
    $request.ContentLength = 0
    $request.ContentType = "application/json"
    $request.Proxy = $null  # Disable proxy

    try {
        $response = $request.GetResponse()
        $reader = New-Object System.IO.StreamReader($response.GetResponseStream())
        $json = $reader.ReadToEnd() | ConvertFrom-Json
        $reader.Close()
        return $json.value
    } catch {
        Write-Host "`n‚ùå ERROR getting session ID:" -ForegroundColor Red
        Write-Host $_.Exception.Message -ForegroundColor Yellow
        return $null
    }
}

# --- Step 2: Get local user list ---
function Get-VCenterLocalUsers {
    param (
        [string]$vcHost,
        [string]$sessionId
    )

    $uri = "https://$vcHost/api/appliance/local-accounts"

    $request = [System.Net.WebRequest]::Create($uri)
    $request.Method = "GET"
    $request.Headers.Add("vmware-api-session-id", $sessionId)
    $request.ContentType = "application/json"
    $request.Proxy = $null  # Disable proxy

    try {
        $response = $request.GetResponse()
        $reader = New-Object System.IO.StreamReader($response.GetResponseStream())
        $json = $reader.ReadToEnd() | ConvertFrom-Json
        $reader.Close()
        return $json
    } catch {
        Write-Host "`n‚ùå ERROR getting user list:" -ForegroundColor Red
        Write-Host $_.Exception.Message -ForegroundColor Yellow
        return $null
    }
}

# --- Main Logic ---
Write-Host "üîê Getting vCenter session..." -ForegroundColor Cyan
$sessionId = Get-VCenterSession -vcHost $vcHost -username $username -password $password

if ($sessionId) {
    Write-Host "`n‚úÖ Session ID retrieved: $sessionId" -ForegroundColor Green
    Write-Host "üë• Retrieving local users..." -ForegroundColor Cyan
    $users = Get-VCenterLocalUsers -vcHost $vcHost -sessionId $sessionId

    if ($users) {
        Write-Host "`nüìã Local User Accounts:" -ForegroundColor Green
        $users | Format-Table -AutoSize
    }
}









import ssl
import requests
import urllib3
from pyVim.connect import SmartConnect, Disconnect
import atexit

# Disable self-signed cert warnings
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def get_vcenter_session_cookie(host, username, password):
    """
    Connect to vCenter via pyVmomi and return session cookie for REST API.
    """
    context = ssl._create_unverified_context()

    si = SmartConnect(host=host, user=username, pwd=password, sslContext=context)
    atexit.register(Disconnect, si)

    session_cookie = si._stub.cookie  # e.g., "vmware_soap_session=xyz; path=/; secure; HttpOnly"
    cookie_value = session_cookie.split('=')[1].split(';')[0]
    return cookie_value

def get_local_vcenter_users(vcenter_host, session_cookie):
    """
    Use the vSphere REST API to get local users, using the session from pyVmomi.
    """
    url = f"https://{vcenter_host}/api/appliance/local-account"
    headers = {
        "vmware-api-session-id": session_cookie
    }

    response = requests.get(url, headers=headers, verify=False)

    if response.status_code != 200:
        raise Exception(f"Failed to fetch users: {response.status_code} - {response.text}")

    return response.json().get("value", [])

# üîß Usage
if __name__ == "__main__":
    VCENTER_HOST = "your-vcenter-host"
    USERNAME = "your-username@vsphere.local"
    PASSWORD = "your-password"

    print(f"Connecting to vCenter {VCENTER_HOST}...")

    session_id = get_vcenter_session_cookie(VCENTER_HOST, USERNAME, PASSWORD)
    users = get_local_vcenter_users(VCENTER_HOST, session_id)

    for user in users:
        print(f"{user['username']:<25}  Enabled: {user['enabled']}  Role: {user['role']}")
